{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/tag-cloud.service.ts","webpack:///./src/app/ui.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.tag-cloud {\\r\\n    overflow: auto; \\r\\n    height: 100%; \\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi50YWctY2xvdWQge1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87IFxyXG4gICAgaGVpZ2h0OiAxMDAlOyBcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Tag Cloud</span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n  <div class=\\\"container\\\">\\n    <mat-card>\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile\\n            colspan=\\\"1\\\"\\n            rowspan=\\\"5\\\"\\n        >\\n          <form class=\\\"full-width\\\">\\n              <mat-form-field class=\\\"full-width\\\">\\n                  <textarea \\n                    #textarea\\n                    [(ngModel)]='text'\\n                    [ngModelOptions]=\\\"{standalone: true}\\\"\\n                    matInput \\n                    placeholder=\\\"Leave a text to generate Tag Cloud from its words\\\"\\n                    rows=\\\"20\\\"\\n                  ></textarea>\\n              </mat-form-field>\\n          </form>\\n        </mat-grid-tile>\\n        <mat-grid-tile\\n            colspan=\\\"1\\\"\\n            rowspan=\\\"5\\\"\\n        >\\n          <div class=\\\"tag-cloud\\\" #tagCloud></div>\\n        </mat-grid-tile>\\n      </mat-grid-list>\\n    </mat-card>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { UiService } from './ui.service';\nimport { NgModel } from '@angular/forms';\nimport { Observable, fromEvent, Subscription, timer } from 'rxjs';\nimport { TagCloudService } from './tag-cloud.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ \n    TagCloudService\n  ]\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'mc3-tag-cloud';\n  text: NgModel;\n\n  @ViewChild('textarea') input: ElementRef<HTMLBaseElement>;\n  @ViewChild('tagCloud') tags: ElementRef<HTMLBaseElement>;\n\n  private input$: Observable<Event>;\n  private inputSubscription: Subscription;\n  private inputTimer: any;\n  private timer: Observable<any>;\n  private timerSubscription: Subscription;\n\n  private tagCloudFinishedSubscription: Subscription;\n\n  constructor(\n    private ui: UiService,\n    private tagCloudService: TagCloudService\n  ) { }\n\n  ngOnInit() {\n    this.initTimer();\n    this.initInputEvent();\n    this.tagCloudFinishedSubscription = this.tagCloudService.finished.subscribe((tagCloud: Object) => {\n      this.afterTagCloudGeneration(tagCloud);\n    });\n  }\n\n  ngOnDestroy() {\n    this.timerSubscription ? this.timerSubscription.unsubscribe() : null;\n    this.inputSubscription ? this.inputSubscription.unsubscribe() : null;\n  }\n\n  private initTimer() {\n    this.timer = timer(1500);\n  }\n\n  private initInputEvent() {\n    this.input$ = fromEvent(this.input.nativeElement, 'input');\n    this.inputSubscription = this.input$.subscribe((_) => {\n      this.timerSubscription ? this.timerSubscription.unsubscribe() : null;\n      this.timerSubscription = this.timer.subscribe((_) => {\n        this.triggerTagCloudGeneration();\n      });\n    });\n  }\n\n  private triggerTagCloudGeneration() {\n    this.ui.spin$.next(true);\n    this.tagCloudService.generate(this.text.toString());\n  }\n\n  private afterTagCloudGeneration(tagCloud: Object) {\n    this.tagCloudService.processToShow(tagCloud);\n    this.showTagCloud(tagCloud);\n    this.ui.spin$.next(false);\n  }\n\n  private showTagCloud(tagCloud: Object) {\n    this.tags.nativeElement.innerHTML = \"\";\n    const colors = ['red', 'green', 'blue', 'pink', 'orange'];\n    let counter = 0;\n    for (const tag of tagCloud['tags']) {\n      const colorIndex = counter % colors.length;\n      this.tags.nativeElement.innerHTML += ` <a href=\"${tag['url']}\" style=\"font-size: ${tag['fontSize']}px; color: ${colors[colorIndex]};\">${tag['tag']}</a> `;\n      counter++;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { MatToolbarModule, MatCardModule, MatGridListModule, MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { registerLocaleData } from '@angular/common';\nimport localePl from '@angular/common/locales/pl';\nimport { MatProgressSpinnerModule, MatSpinner } from '@angular/material/progress-spinner';\nimport { OverlayModule } from '@angular/cdk/overlay'\n\nimport { AppComponent } from './app.component';\nimport { UiService } from './ui.service';\n\nregisterLocaleData(localePl, 'pl');\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule, \n    OverlayModule \n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'pl' },\n    UiService\n  ],\n  entryComponents: [ MatSpinner  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject, timer } from 'rxjs';\n\n@Injectable()\nexport class TagCloudService {\n  finished: Subject<Object> = new Subject();\n\n  constructor() {}\n\n  private generateTagCloudFromText(text: string): Object {\n    text = text.replace(/[^A-ZĄĆĘŁŃÓŚŹŻa-ząćęłńóśźż0-9]/g, ' ');\n    let helper = {tags: null, stats: {countMax: 0, countMin: 0}};\n    let items = {};\n    let initialValue = [];\n    const tags = text.split(' ').filter((value) => value.length).sort().reduce<Object>((pV, cV, cI, arr) => {\n      cV = cV.toLocaleLowerCase();\n      if (!items[cV]) {\n        items[cV] = initialValue.length;\n      }\n      !initialValue[items[cV]]\n        ? (initialValue.push({tag: cV, count: 1, url: `#${cV}`})) \n        : initialValue[items[cV]].count++;\n      helper.stats.countMax < initialValue[items[cV]].count \n        ? (helper.stats.countMax = initialValue[items[cV]].count) \n        : null;\n        helper.stats.countMin > initialValue[items[cV]].count || helper.stats.countMin === 0 \n        ? (helper.stats.countMin = initialValue[items[cV]].count) \n        : null;\n      return initialValue;\n    }, initialValue);\n    helper.tags = tags;\n    return helper;\n  }\n\n  generate(data: string) {\n    timer(1500).subscribe((_) => {\n      this.finished.next(this.generateTagCloudFromText(data));\n    });\n  }\n\n  processToShow(tagCloud: Object, minFontSize: number = 12, maxFontSize: number = 56) {\n    const {countMax, countMin} = tagCloud['stats'];\n    const calcFontSize = (count: number): number => {\n      return Math.floor(((count - countMin) / (countMax - countMin) * (maxFontSize - minFontSize)) + minFontSize);\n    };\n    for (let tag of tagCloud['tags']) {\n      tag['fontSize'] = calcFontSize(tag['count']);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OverlayRef, Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { MatSpinner } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { map, scan } from 'rxjs/operators';\n\n@Injectable()\nexport class UiService {\n  private spinnerRef: OverlayRef = this.cdkSpinnerCreate();\n  spin$: Subject<boolean> = new Subject();\n\n  constructor(\n    private overlay: Overlay,\n  ) {\n    this.spin$\n      .asObservable()\n      .pipe(\n        map(val => val ? 1 : -1),\n        scan((acc, one) => (acc + one) >= 0 ? acc + one : 0, 0)\n      )\n      .subscribe(\n        (res) => {\n          if (res === 1) { this.showSpinner() }\n          else if (res == 0) {\n            this.spinnerRef.hasAttached() ? this.stopSpinner() : null;\n          }\n        })\n  }\n\n  private cdkSpinnerCreate() {\n    return this.overlay.create({\n      hasBackdrop: true,\n      backdropClass: 'dark-backdrop',\n      positionStrategy: this.overlay.position()\n        .global()\n        .centerHorizontally()\n        .centerVertically()\n    })\n  }\n\n  showSpinner() {\n    this.spinnerRef.attach(new ComponentPortal(MatSpinner))\n  }\n\n  stopSpinner() {\n    this.spinnerRef.detach();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}